syntax = "proto3";
package types;

option go_package = "gitlab.com/thorchain/thornode/x/thorchain/types";

import "thorchain/v1/common/common.proto";
import "thorchain/v1/x/thorchain/types/type_pool.proto";
import "thorchain/v1/x/thorchain/types/type_reserve_contributor.proto";
import "thorchain/v1/x/thorchain/types/type_tx_out.proto";
import "gogoproto/gogo.proto";

message PoolMod {
  common.Asset asset = 1 [(gogoproto.nullable) = false];
  string rune_amt = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  bool rune_add = 3;
  string asset_amt = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  bool asset_add = 5;
}

message EventLimitOrder {
  common.Coin source = 1 [(gogoproto.nullable) = false];
  common.Coin target = 2 [(gogoproto.nullable) = false];
  string tx_id = 3 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
}

message EventStreamingSwap {
  string tx_id = 1 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
  uint64 interval = 2;
  uint64 quantity = 3;
  uint64 count = 4;
  int64 last_height = 5;
  string trade_target = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  common.Coin deposit = 7 [(gogoproto.nullable) = false];
  common.Coin in = 8 [(gogoproto.nullable) = false];
  common.Coin out = 9 [(gogoproto.nullable) = false];
  repeated uint64 failed_swaps = 10;
  repeated string failed_swap_reasons = 11;
}

message EventSwap {
  common.Asset pool = 1 [(gogoproto.nullable) = false];
  string swap_target = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string swap_slip = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string liquidity_fee = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string liquidity_fee_in_rune = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  common.Tx in_tx = 6 [(gogoproto.nullable) = false];
  common.Tx out_txs = 7 [(gogoproto.nullable) = false];
  common.Coin emit_asset = 8 [(gogoproto.nullable) = false];
  string synth_units = 9 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  uint64 streaming_swap_quantity = 10;
  uint64 streaming_swap_count = 11;
  string pool_slip = 12 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
}

message EventAddLiquidity {
  common.Asset pool = 1 [(gogoproto.nullable) = false];
  string provider_units = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string rune_address = 3 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string rune_amount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string asset_amount = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string rune_tx_id = 6 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "RuneTxID"];
  string asset_tx_id = 7 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "AssetTxID"];
  string asset_address = 8 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
}

message EventWithdraw {
  common.Asset pool = 1 [(gogoproto.nullable) = false];
  string provider_units = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  int64 basis_points = 3;
  bytes asymmetry = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  common.Tx in_tx = 5 [(gogoproto.nullable) = false];
  string emit_asset = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string emit_rune = 7 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string imp_loss_protection = 8 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
}

enum PendingLiquidityType {
  add = 0;
  withdraw = 1;
}

message EventPendingLiquidity {
  common.Asset pool = 1 [(gogoproto.nullable) = false];
  PendingLiquidityType pending_type = 2;
  string rune_address = 3 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string rune_amount = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string asset_address = 5 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string asset_amount = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string rune_tx_id = 7 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "RuneTxID"];
  string asset_tx_id = 8 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "AssetTxID"];
}

message EventDonate {
  common.Asset pool = 1 [(gogoproto.nullable) = false];
  common.Tx in_tx = 2 [(gogoproto.nullable) = false];
}

message EventPool {
  common.Asset pool = 1 [(gogoproto.nullable) = false];
  types.PoolStatus Status = 2;
}

message PoolAmt {
  common.Asset asset = 1 [(gogoproto.nullable) = false];
  int64 amount = 2;
}

message EventRewards {
  string bond_reward = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  repeated PoolAmt pool_rewards = 2 [(gogoproto.nullable) = false];
}

message EventRefund {
  uint32 code = 1;
  string reason = 2;
  common.Tx in_tx = 3 [(gogoproto.nullable) = false];
  common.Fee fee = 4 [(gogoproto.nullable) = false];
}

enum BondType {
  bond_paid = 0;
  bond_returned = 1;
  bond_reward = 2;
  bond_cost = 3;
}

message EventBond {
  string amount = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  BondType bond_type = 2;
  common.Tx tx_in = 3 [(gogoproto.nullable) = false];
}

message GasPool {
  common.Asset asset = 1 [(gogoproto.nullable) = false];
  string rune_amt = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string asset_amt = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  int64 count = 4;
}

message EventGas {
  repeated GasPool pools = 1 [(gogoproto.nullable) = false];
}

message EventReserve {
  types.ReserveContributor reserve_contributor = 1 [(gogoproto.nullable) = false];
  common.Tx in_tx = 2 [(gogoproto.nullable) = false];
}

message EventScheduledOutbound {
  TxOutItem out_tx = 1 [(gogoproto.nullable) = false];
}

message EventSecurity {
  string msg = 1;
  common.Tx tx = 2 [(gogoproto.nullable) = false];
}

message EventSlash {
  common.Asset pool = 1 [(gogoproto.nullable) = false];
  repeated PoolAmt slash_amount = 2 [(gogoproto.nullable) = false];
}

message EventErrata {
  string tx_id = 1 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
  repeated PoolMod pools = 2 [(gogoproto.castrepeated) = "PoolMods", (gogoproto.nullable) = false];
}

message EventFee {
  string tx_id = 1 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
  common.Fee fee = 2 [(gogoproto.nullable) = false];
  string synth_units = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
}

message EventOutbound {
  string in_tx_id = 1 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "InTxID"];
  common.Tx tx = 2 [(gogoproto.nullable) = false];
}

message EventTssKeygenSuccess {
  string pub_key = 1 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.PubKey"];
  repeated string members = 2;
  int64 height = 3;
}

message EventTssKeygenFailure {
  string fail_reason = 1;
  bool is_unicast = 2;
  repeated string blame_nodes = 3;
  string round = 4;
  int64 height = 5;
}

message EventTssKeygenMetric {
  string pub_key = 1 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.PubKey"];
  int64 median_duration_ms = 2;
}

message EventTssKeysignMetric {
  string tx_id = 1 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
  int64 median_duration_ms = 2;
}

message EventSlashPoint {
  bytes node_address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  int64 slash_points = 2;
  string reason = 3;
}

message EventPoolBalanceChanged {
  PoolMod pool_change = 1 [(gogoproto.nullable) = false];
  string reason = 2;
}

// TODO remove on hard fork
message EventSwitch {
  bytes to_address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string from_address = 2 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  common.Coin burn = 3 [(gogoproto.nullable) = false];
  string tx_id = 4 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
}

// TODO remove on hard fork
message EventSwitchV87 {
  bytes to_address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string from_address = 2 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  common.Coin burn = 3 [(gogoproto.nullable) = false];
  string tx_id = 4 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
  string mint = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
}

enum MintBurnSupplyType {
  mint = 0;
  burn = 1;
}

message EventMintBurn {
  MintBurnSupplyType supply = 1;
  string denom = 2;
  string amount = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string reason = 4;
}

message EventTradeAccountDeposit {
  string amount = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  common.Asset asset = 2 [(gogoproto.nullable) = false];
  string asset_address = 3 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string rune_address = 4 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string tx_id = 5 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];

}

message EventTradeAccountWithdraw {
  string amount = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  common.Asset asset = 2 [(gogoproto.nullable) = false];
  string asset_address = 3 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string rune_address = 4 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string tx_id = 5 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
}

message EventLoanOpen {
  string collateral_deposited = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  common.Asset collateral_asset = 2 [(gogoproto.nullable) = false];
  string collateralization_ratio = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string debt_issued = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string owner = 5 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  common.Asset target_asset = 6 [(gogoproto.nullable) = false];
  string tx_id = 7 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
}

message EventLoanRepayment {
  string collateral_withdrawn = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  common.Asset collateral_asset = 2 [(gogoproto.nullable) = false];
  string debt_repaid = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string owner = 4 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string tx_id = 7 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.TxID", (gogoproto.customname) = "TxID"];
}

message EventTHORName {
  string name = 1;
  string chain = 2 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Chain"];
  string address = 3 [(gogoproto.casttype) = "gitlab.com/thorchain/thornode/common.Address"];
  string registration_fee = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  string fund_amt = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Uint", (gogoproto.nullable) = false];
  int64 expire = 6;
  bytes owner = 7 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message EventSetMimir {
  string key = 1;
  string value = 2;
}

message EventSetNodeMimir {
  string key = 1;
  string value = 2;
  string address = 3;
}

message EventVersion {
  string version = 1;
}
