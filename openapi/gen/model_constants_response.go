/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConstantsResponse struct for ConstantsResponse
type ConstantsResponse struct {
	Int64Values *map[string]string `json:"int_64_values,omitempty"`
	BoolValues *map[string]string `json:"bool_values,omitempty"`
	StringValues *map[string]string `json:"string_values,omitempty"`
}

// NewConstantsResponse instantiates a new ConstantsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstantsResponse() *ConstantsResponse {
	this := ConstantsResponse{}
	return &this
}

// NewConstantsResponseWithDefaults instantiates a new ConstantsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstantsResponseWithDefaults() *ConstantsResponse {
	this := ConstantsResponse{}
	return &this
}

// GetInt64Values returns the Int64Values field value if set, zero value otherwise.
func (o *ConstantsResponse) GetInt64Values() map[string]string {
	if o == nil || o.Int64Values == nil {
		var ret map[string]string
		return ret
	}
	return *o.Int64Values
}

// GetInt64ValuesOk returns a tuple with the Int64Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstantsResponse) GetInt64ValuesOk() (*map[string]string, bool) {
	if o == nil || o.Int64Values == nil {
		return nil, false
	}
	return o.Int64Values, true
}

// HasInt64Values returns a boolean if a field has been set.
func (o *ConstantsResponse) HasInt64Values() bool {
	if o != nil && o.Int64Values != nil {
		return true
	}

	return false
}

// SetInt64Values gets a reference to the given map[string]string and assigns it to the Int64Values field.
func (o *ConstantsResponse) SetInt64Values(v map[string]string) {
	o.Int64Values = &v
}

// GetBoolValues returns the BoolValues field value if set, zero value otherwise.
func (o *ConstantsResponse) GetBoolValues() map[string]string {
	if o == nil || o.BoolValues == nil {
		var ret map[string]string
		return ret
	}
	return *o.BoolValues
}

// GetBoolValuesOk returns a tuple with the BoolValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstantsResponse) GetBoolValuesOk() (*map[string]string, bool) {
	if o == nil || o.BoolValues == nil {
		return nil, false
	}
	return o.BoolValues, true
}

// HasBoolValues returns a boolean if a field has been set.
func (o *ConstantsResponse) HasBoolValues() bool {
	if o != nil && o.BoolValues != nil {
		return true
	}

	return false
}

// SetBoolValues gets a reference to the given map[string]string and assigns it to the BoolValues field.
func (o *ConstantsResponse) SetBoolValues(v map[string]string) {
	o.BoolValues = &v
}

// GetStringValues returns the StringValues field value if set, zero value otherwise.
func (o *ConstantsResponse) GetStringValues() map[string]string {
	if o == nil || o.StringValues == nil {
		var ret map[string]string
		return ret
	}
	return *o.StringValues
}

// GetStringValuesOk returns a tuple with the StringValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstantsResponse) GetStringValuesOk() (*map[string]string, bool) {
	if o == nil || o.StringValues == nil {
		return nil, false
	}
	return o.StringValues, true
}

// HasStringValues returns a boolean if a field has been set.
func (o *ConstantsResponse) HasStringValues() bool {
	if o != nil && o.StringValues != nil {
		return true
	}

	return false
}

// SetStringValues gets a reference to the given map[string]string and assigns it to the StringValues field.
func (o *ConstantsResponse) SetStringValues(v map[string]string) {
	o.StringValues = &v
}

func (o ConstantsResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Int64Values != nil {
		toSerialize["int_64_values"] = o.Int64Values
	}
	if o.BoolValues != nil {
		toSerialize["bool_values"] = o.BoolValues
	}
	if o.StringValues != nil {
		toSerialize["string_values"] = o.StringValues
	}
	return json.Marshal(toSerialize)
}

type NullableConstantsResponse struct {
	value *ConstantsResponse
	isSet bool
}

func (v NullableConstantsResponse) Get() *ConstantsResponse {
	return v.value
}

func (v *NullableConstantsResponse) Set(val *ConstantsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConstantsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConstantsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstantsResponse(val *ConstantsResponse) *NullableConstantsResponse {
	return &NullableConstantsResponse{value: val, isSet: true}
}

func (v NullableConstantsResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstantsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


