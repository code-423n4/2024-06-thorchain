/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// KeygenResponse struct for KeygenResponse
type KeygenResponse struct {
	KeygenBlock KeygenBlock `json:"keygen_block"`
	Signature string `json:"signature"`
}

// NewKeygenResponse instantiates a new KeygenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeygenResponse(keygenBlock KeygenBlock, signature string) *KeygenResponse {
	this := KeygenResponse{}
	this.KeygenBlock = keygenBlock
	this.Signature = signature
	return &this
}

// NewKeygenResponseWithDefaults instantiates a new KeygenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeygenResponseWithDefaults() *KeygenResponse {
	this := KeygenResponse{}
	return &this
}

// GetKeygenBlock returns the KeygenBlock field value
func (o *KeygenResponse) GetKeygenBlock() KeygenBlock {
	if o == nil {
		var ret KeygenBlock
		return ret
	}

	return o.KeygenBlock
}

// GetKeygenBlockOk returns a tuple with the KeygenBlock field value
// and a boolean to check if the value has been set.
func (o *KeygenResponse) GetKeygenBlockOk() (*KeygenBlock, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeygenBlock, true
}

// SetKeygenBlock sets field value
func (o *KeygenResponse) SetKeygenBlock(v KeygenBlock) {
	o.KeygenBlock = v
}

// GetSignature returns the Signature field value
func (o *KeygenResponse) GetSignature() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Signature
}

// GetSignatureOk returns a tuple with the Signature field value
// and a boolean to check if the value has been set.
func (o *KeygenResponse) GetSignatureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Signature, true
}

// SetSignature sets field value
func (o *KeygenResponse) SetSignature(v string) {
	o.Signature = v
}

func (o KeygenResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["keygen_block"] = o.KeygenBlock
	}
	if true {
		toSerialize["signature"] = o.Signature
	}
	return json.Marshal(toSerialize)
}

type NullableKeygenResponse struct {
	value *KeygenResponse
	isSet bool
}

func (v NullableKeygenResponse) Get() *KeygenResponse {
	return v.value
}

func (v *NullableKeygenResponse) Set(val *KeygenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeygenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeygenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeygenResponse(val *KeygenResponse) *NullableKeygenResponse {
	return &NullableKeygenResponse{value: val, isSet: true}
}

func (v NullableKeygenResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeygenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


