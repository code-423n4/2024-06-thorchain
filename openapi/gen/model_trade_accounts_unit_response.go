/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TradeAccountsUnitResponse struct for TradeAccountsUnitResponse
type TradeAccountsUnitResponse struct {
	// trade account asset with \"~\" separator
	Asset string `json:"asset"`
	// total units of trade asset
	Unit *string `json:"unit,omitempty"`
	// total depth of trade asset
	Depth string `json:"depth"`
}

// NewTradeAccountsUnitResponse instantiates a new TradeAccountsUnitResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTradeAccountsUnitResponse(asset string, depth string) *TradeAccountsUnitResponse {
	this := TradeAccountsUnitResponse{}
	this.Asset = asset
	this.Depth = depth
	return &this
}

// NewTradeAccountsUnitResponseWithDefaults instantiates a new TradeAccountsUnitResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTradeAccountsUnitResponseWithDefaults() *TradeAccountsUnitResponse {
	this := TradeAccountsUnitResponse{}
	return &this
}

// GetAsset returns the Asset field value
func (o *TradeAccountsUnitResponse) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *TradeAccountsUnitResponse) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *TradeAccountsUnitResponse) SetAsset(v string) {
	o.Asset = v
}

// GetUnit returns the Unit field value if set, zero value otherwise.
func (o *TradeAccountsUnitResponse) GetUnit() string {
	if o == nil || o.Unit == nil {
		var ret string
		return ret
	}
	return *o.Unit
}

// GetUnitOk returns a tuple with the Unit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TradeAccountsUnitResponse) GetUnitOk() (*string, bool) {
	if o == nil || o.Unit == nil {
		return nil, false
	}
	return o.Unit, true
}

// HasUnit returns a boolean if a field has been set.
func (o *TradeAccountsUnitResponse) HasUnit() bool {
	if o != nil && o.Unit != nil {
		return true
	}

	return false
}

// SetUnit gets a reference to the given string and assigns it to the Unit field.
func (o *TradeAccountsUnitResponse) SetUnit(v string) {
	o.Unit = &v
}

// GetDepth returns the Depth field value
func (o *TradeAccountsUnitResponse) GetDepth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Depth
}

// GetDepthOk returns a tuple with the Depth field value
// and a boolean to check if the value has been set.
func (o *TradeAccountsUnitResponse) GetDepthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Depth, true
}

// SetDepth sets field value
func (o *TradeAccountsUnitResponse) SetDepth(v string) {
	o.Depth = v
}

func (o TradeAccountsUnitResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if o.Unit != nil {
		toSerialize["unit"] = o.Unit
	}
	if true {
		toSerialize["depth"] = o.Depth
	}
	return json.Marshal(toSerialize)
}

type NullableTradeAccountsUnitResponse struct {
	value *TradeAccountsUnitResponse
	isSet bool
}

func (v NullableTradeAccountsUnitResponse) Get() *TradeAccountsUnitResponse {
	return v.value
}

func (v *NullableTradeAccountsUnitResponse) Set(val *TradeAccountsUnitResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTradeAccountsUnitResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTradeAccountsUnitResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTradeAccountsUnitResponse(val *TradeAccountsUnitResponse) *NullableTradeAccountsUnitResponse {
	return &NullableTradeAccountsUnitResponse{value: val, isSet: true}
}

func (v NullableTradeAccountsUnitResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTradeAccountsUnitResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


