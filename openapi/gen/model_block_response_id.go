/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BlockResponseId struct for BlockResponseId
type BlockResponseId struct {
	Hash string `json:"hash"`
	Parts BlockResponseIdParts `json:"parts"`
}

// NewBlockResponseId instantiates a new BlockResponseId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockResponseId(hash string, parts BlockResponseIdParts) *BlockResponseId {
	this := BlockResponseId{}
	this.Hash = hash
	this.Parts = parts
	return &this
}

// NewBlockResponseIdWithDefaults instantiates a new BlockResponseId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockResponseIdWithDefaults() *BlockResponseId {
	this := BlockResponseId{}
	return &this
}

// GetHash returns the Hash field value
func (o *BlockResponseId) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *BlockResponseId) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *BlockResponseId) SetHash(v string) {
	o.Hash = v
}

// GetParts returns the Parts field value
func (o *BlockResponseId) GetParts() BlockResponseIdParts {
	if o == nil {
		var ret BlockResponseIdParts
		return ret
	}

	return o.Parts
}

// GetPartsOk returns a tuple with the Parts field value
// and a boolean to check if the value has been set.
func (o *BlockResponseId) GetPartsOk() (*BlockResponseIdParts, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parts, true
}

// SetParts sets field value
func (o *BlockResponseId) SetParts(v BlockResponseIdParts) {
	o.Parts = v
}

func (o BlockResponseId) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hash"] = o.Hash
	}
	if true {
		toSerialize["parts"] = o.Parts
	}
	return json.Marshal(toSerialize)
}

type NullableBlockResponseId struct {
	value *BlockResponseId
	isSet bool
}

func (v NullableBlockResponseId) Get() *BlockResponseId {
	return v.value
}

func (v *NullableBlockResponseId) Set(val *BlockResponseId) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockResponseId) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockResponseId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockResponseId(val *BlockResponseId) *NullableBlockResponseId {
	return &NullableBlockResponseId{value: val, isSet: true}
}

func (v NullableBlockResponseId) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockResponseId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


