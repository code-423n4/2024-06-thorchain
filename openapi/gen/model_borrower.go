/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Borrower struct for Borrower
type Borrower struct {
	Owner string `json:"owner"`
	Asset string `json:"asset"`
	DebtIssued string `json:"debt_issued"`
	DebtRepaid string `json:"debt_repaid"`
	DebtCurrent string `json:"debt_current"`
	CollateralDeposited string `json:"collateral_deposited"`
	CollateralWithdrawn string `json:"collateral_withdrawn"`
	CollateralCurrent string `json:"collateral_current"`
	LastOpenHeight int64 `json:"last_open_height"`
	LastRepayHeight int64 `json:"last_repay_height"`
}

// NewBorrower instantiates a new Borrower object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBorrower(owner string, asset string, debtIssued string, debtRepaid string, debtCurrent string, collateralDeposited string, collateralWithdrawn string, collateralCurrent string, lastOpenHeight int64, lastRepayHeight int64) *Borrower {
	this := Borrower{}
	this.Owner = owner
	this.Asset = asset
	this.DebtIssued = debtIssued
	this.DebtRepaid = debtRepaid
	this.DebtCurrent = debtCurrent
	this.CollateralDeposited = collateralDeposited
	this.CollateralWithdrawn = collateralWithdrawn
	this.CollateralCurrent = collateralCurrent
	this.LastOpenHeight = lastOpenHeight
	this.LastRepayHeight = lastRepayHeight
	return &this
}

// NewBorrowerWithDefaults instantiates a new Borrower object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBorrowerWithDefaults() *Borrower {
	this := Borrower{}
	return &this
}

// GetOwner returns the Owner field value
func (o *Borrower) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetOwnerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *Borrower) SetOwner(v string) {
	o.Owner = v
}

// GetAsset returns the Asset field value
func (o *Borrower) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *Borrower) SetAsset(v string) {
	o.Asset = v
}

// GetDebtIssued returns the DebtIssued field value
func (o *Borrower) GetDebtIssued() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DebtIssued
}

// GetDebtIssuedOk returns a tuple with the DebtIssued field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetDebtIssuedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebtIssued, true
}

// SetDebtIssued sets field value
func (o *Borrower) SetDebtIssued(v string) {
	o.DebtIssued = v
}

// GetDebtRepaid returns the DebtRepaid field value
func (o *Borrower) GetDebtRepaid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DebtRepaid
}

// GetDebtRepaidOk returns a tuple with the DebtRepaid field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetDebtRepaidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebtRepaid, true
}

// SetDebtRepaid sets field value
func (o *Borrower) SetDebtRepaid(v string) {
	o.DebtRepaid = v
}

// GetDebtCurrent returns the DebtCurrent field value
func (o *Borrower) GetDebtCurrent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DebtCurrent
}

// GetDebtCurrentOk returns a tuple with the DebtCurrent field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetDebtCurrentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DebtCurrent, true
}

// SetDebtCurrent sets field value
func (o *Borrower) SetDebtCurrent(v string) {
	o.DebtCurrent = v
}

// GetCollateralDeposited returns the CollateralDeposited field value
func (o *Borrower) GetCollateralDeposited() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollateralDeposited
}

// GetCollateralDepositedOk returns a tuple with the CollateralDeposited field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetCollateralDepositedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollateralDeposited, true
}

// SetCollateralDeposited sets field value
func (o *Borrower) SetCollateralDeposited(v string) {
	o.CollateralDeposited = v
}

// GetCollateralWithdrawn returns the CollateralWithdrawn field value
func (o *Borrower) GetCollateralWithdrawn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollateralWithdrawn
}

// GetCollateralWithdrawnOk returns a tuple with the CollateralWithdrawn field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetCollateralWithdrawnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollateralWithdrawn, true
}

// SetCollateralWithdrawn sets field value
func (o *Borrower) SetCollateralWithdrawn(v string) {
	o.CollateralWithdrawn = v
}

// GetCollateralCurrent returns the CollateralCurrent field value
func (o *Borrower) GetCollateralCurrent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollateralCurrent
}

// GetCollateralCurrentOk returns a tuple with the CollateralCurrent field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetCollateralCurrentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollateralCurrent, true
}

// SetCollateralCurrent sets field value
func (o *Borrower) SetCollateralCurrent(v string) {
	o.CollateralCurrent = v
}

// GetLastOpenHeight returns the LastOpenHeight field value
func (o *Borrower) GetLastOpenHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastOpenHeight
}

// GetLastOpenHeightOk returns a tuple with the LastOpenHeight field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetLastOpenHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastOpenHeight, true
}

// SetLastOpenHeight sets field value
func (o *Borrower) SetLastOpenHeight(v int64) {
	o.LastOpenHeight = v
}

// GetLastRepayHeight returns the LastRepayHeight field value
func (o *Borrower) GetLastRepayHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LastRepayHeight
}

// GetLastRepayHeightOk returns a tuple with the LastRepayHeight field value
// and a boolean to check if the value has been set.
func (o *Borrower) GetLastRepayHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastRepayHeight, true
}

// SetLastRepayHeight sets field value
func (o *Borrower) SetLastRepayHeight(v int64) {
	o.LastRepayHeight = v
}

func (o Borrower) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["debt_issued"] = o.DebtIssued
	}
	if true {
		toSerialize["debt_repaid"] = o.DebtRepaid
	}
	if true {
		toSerialize["debt_current"] = o.DebtCurrent
	}
	if true {
		toSerialize["collateral_deposited"] = o.CollateralDeposited
	}
	if true {
		toSerialize["collateral_withdrawn"] = o.CollateralWithdrawn
	}
	if true {
		toSerialize["collateral_current"] = o.CollateralCurrent
	}
	if true {
		toSerialize["last_open_height"] = o.LastOpenHeight
	}
	if true {
		toSerialize["last_repay_height"] = o.LastRepayHeight
	}
	return json.Marshal(toSerialize)
}

type NullableBorrower struct {
	value *Borrower
	isSet bool
}

func (v NullableBorrower) Get() *Borrower {
	return v.value
}

func (v *NullableBorrower) Set(val *Borrower) {
	v.value = val
	v.isSet = true
}

func (v NullableBorrower) IsSet() bool {
	return v.isSet
}

func (v *NullableBorrower) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBorrower(val *Borrower) *NullableBorrower {
	return &NullableBorrower{value: val, isSet: true}
}

func (v NullableBorrower) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBorrower) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


