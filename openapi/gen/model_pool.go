/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Pool struct for Pool
type Pool struct {
	Asset string `json:"asset"`
	ShortCode *string `json:"short_code,omitempty"`
	Status string `json:"status"`
	Decimals *int64 `json:"decimals,omitempty"`
	PendingInboundAsset string `json:"pending_inbound_asset"`
	PendingInboundRune string `json:"pending_inbound_rune"`
	BalanceAsset string `json:"balance_asset"`
	BalanceRune string `json:"balance_rune"`
	// the USD (TOR) price of the asset in 1e8
	AssetTorPrice string `json:"asset_tor_price"`
	// the total pool units, this is the sum of LP and synth units
	PoolUnits string `json:"pool_units"`
	// the total pool liquidity provider units
	LPUnits string `json:"LP_units"`
	// the total synth units in the pool
	SynthUnits string `json:"synth_units"`
	// the total supply of synths for the asset
	SynthSupply string `json:"synth_supply"`
	// the balance of L1 asset deposited into the Savers Vault
	SaversDepth string `json:"savers_depth"`
	// the number of units owned by Savers
	SaversUnits string `json:"savers_units"`
	// whether additional synths cannot be minted
	SynthMintPaused bool `json:"synth_mint_paused"`
	// the amount of synth supply remaining before the current max supply is reached
	SynthSupplyRemaining string `json:"synth_supply_remaining"`
	// the amount of collateral collects for loans
	LoanCollateral string `json:"loan_collateral"`
	// the amount of remaining collateral collects for loans
	LoanCollateralRemaining string `json:"loan_collateral_remaining"`
	// the current loan collateralization ratio
	LoanCr string `json:"loan_cr"`
	// the depth of the derived virtual pool relative to L1 pool (in basis points)
	DerivedDepthBps string `json:"derived_depth_bps"`
}

// NewPool instantiates a new Pool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPool(asset string, status string, pendingInboundAsset string, pendingInboundRune string, balanceAsset string, balanceRune string, assetTorPrice string, poolUnits string, lPUnits string, synthUnits string, synthSupply string, saversDepth string, saversUnits string, synthMintPaused bool, synthSupplyRemaining string, loanCollateral string, loanCollateralRemaining string, loanCr string, derivedDepthBps string) *Pool {
	this := Pool{}
	this.Asset = asset
	this.Status = status
	this.PendingInboundAsset = pendingInboundAsset
	this.PendingInboundRune = pendingInboundRune
	this.BalanceAsset = balanceAsset
	this.BalanceRune = balanceRune
	this.AssetTorPrice = assetTorPrice
	this.PoolUnits = poolUnits
	this.LPUnits = lPUnits
	this.SynthUnits = synthUnits
	this.SynthSupply = synthSupply
	this.SaversDepth = saversDepth
	this.SaversUnits = saversUnits
	this.SynthMintPaused = synthMintPaused
	this.SynthSupplyRemaining = synthSupplyRemaining
	this.LoanCollateral = loanCollateral
	this.LoanCollateralRemaining = loanCollateralRemaining
	this.LoanCr = loanCr
	this.DerivedDepthBps = derivedDepthBps
	return &this
}

// NewPoolWithDefaults instantiates a new Pool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPoolWithDefaults() *Pool {
	this := Pool{}
	return &this
}

// GetAsset returns the Asset field value
func (o *Pool) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *Pool) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *Pool) SetAsset(v string) {
	o.Asset = v
}

// GetShortCode returns the ShortCode field value if set, zero value otherwise.
func (o *Pool) GetShortCode() string {
	if o == nil || o.ShortCode == nil {
		var ret string
		return ret
	}
	return *o.ShortCode
}

// GetShortCodeOk returns a tuple with the ShortCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pool) GetShortCodeOk() (*string, bool) {
	if o == nil || o.ShortCode == nil {
		return nil, false
	}
	return o.ShortCode, true
}

// HasShortCode returns a boolean if a field has been set.
func (o *Pool) HasShortCode() bool {
	if o != nil && o.ShortCode != nil {
		return true
	}

	return false
}

// SetShortCode gets a reference to the given string and assigns it to the ShortCode field.
func (o *Pool) SetShortCode(v string) {
	o.ShortCode = &v
}

// GetStatus returns the Status field value
func (o *Pool) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Pool) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Pool) SetStatus(v string) {
	o.Status = v
}

// GetDecimals returns the Decimals field value if set, zero value otherwise.
func (o *Pool) GetDecimals() int64 {
	if o == nil || o.Decimals == nil {
		var ret int64
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pool) GetDecimalsOk() (*int64, bool) {
	if o == nil || o.Decimals == nil {
		return nil, false
	}
	return o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *Pool) HasDecimals() bool {
	if o != nil && o.Decimals != nil {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given int64 and assigns it to the Decimals field.
func (o *Pool) SetDecimals(v int64) {
	o.Decimals = &v
}

// GetPendingInboundAsset returns the PendingInboundAsset field value
func (o *Pool) GetPendingInboundAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PendingInboundAsset
}

// GetPendingInboundAssetOk returns a tuple with the PendingInboundAsset field value
// and a boolean to check if the value has been set.
func (o *Pool) GetPendingInboundAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PendingInboundAsset, true
}

// SetPendingInboundAsset sets field value
func (o *Pool) SetPendingInboundAsset(v string) {
	o.PendingInboundAsset = v
}

// GetPendingInboundRune returns the PendingInboundRune field value
func (o *Pool) GetPendingInboundRune() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PendingInboundRune
}

// GetPendingInboundRuneOk returns a tuple with the PendingInboundRune field value
// and a boolean to check if the value has been set.
func (o *Pool) GetPendingInboundRuneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PendingInboundRune, true
}

// SetPendingInboundRune sets field value
func (o *Pool) SetPendingInboundRune(v string) {
	o.PendingInboundRune = v
}

// GetBalanceAsset returns the BalanceAsset field value
func (o *Pool) GetBalanceAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceAsset
}

// GetBalanceAssetOk returns a tuple with the BalanceAsset field value
// and a boolean to check if the value has been set.
func (o *Pool) GetBalanceAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceAsset, true
}

// SetBalanceAsset sets field value
func (o *Pool) SetBalanceAsset(v string) {
	o.BalanceAsset = v
}

// GetBalanceRune returns the BalanceRune field value
func (o *Pool) GetBalanceRune() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceRune
}

// GetBalanceRuneOk returns a tuple with the BalanceRune field value
// and a boolean to check if the value has been set.
func (o *Pool) GetBalanceRuneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceRune, true
}

// SetBalanceRune sets field value
func (o *Pool) SetBalanceRune(v string) {
	o.BalanceRune = v
}

// GetAssetTorPrice returns the AssetTorPrice field value
func (o *Pool) GetAssetTorPrice() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetTorPrice
}

// GetAssetTorPriceOk returns a tuple with the AssetTorPrice field value
// and a boolean to check if the value has been set.
func (o *Pool) GetAssetTorPriceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetTorPrice, true
}

// SetAssetTorPrice sets field value
func (o *Pool) SetAssetTorPrice(v string) {
	o.AssetTorPrice = v
}

// GetPoolUnits returns the PoolUnits field value
func (o *Pool) GetPoolUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolUnits
}

// GetPoolUnitsOk returns a tuple with the PoolUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetPoolUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolUnits, true
}

// SetPoolUnits sets field value
func (o *Pool) SetPoolUnits(v string) {
	o.PoolUnits = v
}

// GetLPUnits returns the LPUnits field value
func (o *Pool) GetLPUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LPUnits
}

// GetLPUnitsOk returns a tuple with the LPUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetLPUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LPUnits, true
}

// SetLPUnits sets field value
func (o *Pool) SetLPUnits(v string) {
	o.LPUnits = v
}

// GetSynthUnits returns the SynthUnits field value
func (o *Pool) GetSynthUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SynthUnits
}

// GetSynthUnitsOk returns a tuple with the SynthUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSynthUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynthUnits, true
}

// SetSynthUnits sets field value
func (o *Pool) SetSynthUnits(v string) {
	o.SynthUnits = v
}

// GetSynthSupply returns the SynthSupply field value
func (o *Pool) GetSynthSupply() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SynthSupply
}

// GetSynthSupplyOk returns a tuple with the SynthSupply field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSynthSupplyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynthSupply, true
}

// SetSynthSupply sets field value
func (o *Pool) SetSynthSupply(v string) {
	o.SynthSupply = v
}

// GetSaversDepth returns the SaversDepth field value
func (o *Pool) GetSaversDepth() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SaversDepth
}

// GetSaversDepthOk returns a tuple with the SaversDepth field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSaversDepthOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaversDepth, true
}

// SetSaversDepth sets field value
func (o *Pool) SetSaversDepth(v string) {
	o.SaversDepth = v
}

// GetSaversUnits returns the SaversUnits field value
func (o *Pool) GetSaversUnits() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SaversUnits
}

// GetSaversUnitsOk returns a tuple with the SaversUnits field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSaversUnitsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaversUnits, true
}

// SetSaversUnits sets field value
func (o *Pool) SetSaversUnits(v string) {
	o.SaversUnits = v
}

// GetSynthMintPaused returns the SynthMintPaused field value
func (o *Pool) GetSynthMintPaused() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SynthMintPaused
}

// GetSynthMintPausedOk returns a tuple with the SynthMintPaused field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSynthMintPausedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynthMintPaused, true
}

// SetSynthMintPaused sets field value
func (o *Pool) SetSynthMintPaused(v bool) {
	o.SynthMintPaused = v
}

// GetSynthSupplyRemaining returns the SynthSupplyRemaining field value
func (o *Pool) GetSynthSupplyRemaining() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SynthSupplyRemaining
}

// GetSynthSupplyRemainingOk returns a tuple with the SynthSupplyRemaining field value
// and a boolean to check if the value has been set.
func (o *Pool) GetSynthSupplyRemainingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SynthSupplyRemaining, true
}

// SetSynthSupplyRemaining sets field value
func (o *Pool) SetSynthSupplyRemaining(v string) {
	o.SynthSupplyRemaining = v
}

// GetLoanCollateral returns the LoanCollateral field value
func (o *Pool) GetLoanCollateral() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoanCollateral
}

// GetLoanCollateralOk returns a tuple with the LoanCollateral field value
// and a boolean to check if the value has been set.
func (o *Pool) GetLoanCollateralOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoanCollateral, true
}

// SetLoanCollateral sets field value
func (o *Pool) SetLoanCollateral(v string) {
	o.LoanCollateral = v
}

// GetLoanCollateralRemaining returns the LoanCollateralRemaining field value
func (o *Pool) GetLoanCollateralRemaining() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoanCollateralRemaining
}

// GetLoanCollateralRemainingOk returns a tuple with the LoanCollateralRemaining field value
// and a boolean to check if the value has been set.
func (o *Pool) GetLoanCollateralRemainingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoanCollateralRemaining, true
}

// SetLoanCollateralRemaining sets field value
func (o *Pool) SetLoanCollateralRemaining(v string) {
	o.LoanCollateralRemaining = v
}

// GetLoanCr returns the LoanCr field value
func (o *Pool) GetLoanCr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LoanCr
}

// GetLoanCrOk returns a tuple with the LoanCr field value
// and a boolean to check if the value has been set.
func (o *Pool) GetLoanCrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoanCr, true
}

// SetLoanCr sets field value
func (o *Pool) SetLoanCr(v string) {
	o.LoanCr = v
}

// GetDerivedDepthBps returns the DerivedDepthBps field value
func (o *Pool) GetDerivedDepthBps() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DerivedDepthBps
}

// GetDerivedDepthBpsOk returns a tuple with the DerivedDepthBps field value
// and a boolean to check if the value has been set.
func (o *Pool) GetDerivedDepthBpsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DerivedDepthBps, true
}

// SetDerivedDepthBps sets field value
func (o *Pool) SetDerivedDepthBps(v string) {
	o.DerivedDepthBps = v
}

func (o Pool) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if o.ShortCode != nil {
		toSerialize["short_code"] = o.ShortCode
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Decimals != nil {
		toSerialize["decimals"] = o.Decimals
	}
	if true {
		toSerialize["pending_inbound_asset"] = o.PendingInboundAsset
	}
	if true {
		toSerialize["pending_inbound_rune"] = o.PendingInboundRune
	}
	if true {
		toSerialize["balance_asset"] = o.BalanceAsset
	}
	if true {
		toSerialize["balance_rune"] = o.BalanceRune
	}
	if true {
		toSerialize["asset_tor_price"] = o.AssetTorPrice
	}
	if true {
		toSerialize["pool_units"] = o.PoolUnits
	}
	if true {
		toSerialize["LP_units"] = o.LPUnits
	}
	if true {
		toSerialize["synth_units"] = o.SynthUnits
	}
	if true {
		toSerialize["synth_supply"] = o.SynthSupply
	}
	if true {
		toSerialize["savers_depth"] = o.SaversDepth
	}
	if true {
		toSerialize["savers_units"] = o.SaversUnits
	}
	if true {
		toSerialize["synth_mint_paused"] = o.SynthMintPaused
	}
	if true {
		toSerialize["synth_supply_remaining"] = o.SynthSupplyRemaining
	}
	if true {
		toSerialize["loan_collateral"] = o.LoanCollateral
	}
	if true {
		toSerialize["loan_collateral_remaining"] = o.LoanCollateralRemaining
	}
	if true {
		toSerialize["loan_cr"] = o.LoanCr
	}
	if true {
		toSerialize["derived_depth_bps"] = o.DerivedDepthBps
	}
	return json.Marshal(toSerialize)
}

type NullablePool struct {
	value *Pool
	isSet bool
}

func (v NullablePool) Get() *Pool {
	return v.value
}

func (v *NullablePool) Set(val *Pool) {
	v.value = val
	v.isSet = true
}

func (v NullablePool) IsSet() bool {
	return v.isSet
}

func (v *NullablePool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePool(val *Pool) *NullablePool {
	return &NullablePool{value: val, isSet: true}
}

func (v NullablePool) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


