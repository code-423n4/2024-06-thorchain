/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MetricsResponse struct for MetricsResponse
type MetricsResponse struct {
	Keygen []KeygenMetric `json:"keygen,omitempty"`
	Keysign *KeysignMetrics `json:"keysign,omitempty"`
}

// NewMetricsResponse instantiates a new MetricsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetricsResponse() *MetricsResponse {
	this := MetricsResponse{}
	return &this
}

// NewMetricsResponseWithDefaults instantiates a new MetricsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetricsResponseWithDefaults() *MetricsResponse {
	this := MetricsResponse{}
	return &this
}

// GetKeygen returns the Keygen field value if set, zero value otherwise.
func (o *MetricsResponse) GetKeygen() []KeygenMetric {
	if o == nil || o.Keygen == nil {
		var ret []KeygenMetric
		return ret
	}
	return o.Keygen
}

// GetKeygenOk returns a tuple with the Keygen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsResponse) GetKeygenOk() ([]KeygenMetric, bool) {
	if o == nil || o.Keygen == nil {
		return nil, false
	}
	return o.Keygen, true
}

// HasKeygen returns a boolean if a field has been set.
func (o *MetricsResponse) HasKeygen() bool {
	if o != nil && o.Keygen != nil {
		return true
	}

	return false
}

// SetKeygen gets a reference to the given []KeygenMetric and assigns it to the Keygen field.
func (o *MetricsResponse) SetKeygen(v []KeygenMetric) {
	o.Keygen = v
}

// GetKeysign returns the Keysign field value if set, zero value otherwise.
func (o *MetricsResponse) GetKeysign() KeysignMetrics {
	if o == nil || o.Keysign == nil {
		var ret KeysignMetrics
		return ret
	}
	return *o.Keysign
}

// GetKeysignOk returns a tuple with the Keysign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetricsResponse) GetKeysignOk() (*KeysignMetrics, bool) {
	if o == nil || o.Keysign == nil {
		return nil, false
	}
	return o.Keysign, true
}

// HasKeysign returns a boolean if a field has been set.
func (o *MetricsResponse) HasKeysign() bool {
	if o != nil && o.Keysign != nil {
		return true
	}

	return false
}

// SetKeysign gets a reference to the given KeysignMetrics and assigns it to the Keysign field.
func (o *MetricsResponse) SetKeysign(v KeysignMetrics) {
	o.Keysign = &v
}

func (o MetricsResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Keygen != nil {
		toSerialize["keygen"] = o.Keygen
	}
	if o.Keysign != nil {
		toSerialize["keysign"] = o.Keysign
	}
	return json.Marshal(toSerialize)
}

type NullableMetricsResponse struct {
	value *MetricsResponse
	isSet bool
}

func (v NullableMetricsResponse) Get() *MetricsResponse {
	return v.value
}

func (v *NullableMetricsResponse) Set(val *MetricsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMetricsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMetricsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetricsResponse(val *MetricsResponse) *NullableMetricsResponse {
	return &NullableMetricsResponse{value: val, isSet: true}
}

func (v NullableMetricsResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetricsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


