/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TssMetric struct for TssMetric
type TssMetric struct {
	Address *string `json:"address,omitempty"`
	TssTime *int64 `json:"tss_time,omitempty"`
}

// NewTssMetric instantiates a new TssMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTssMetric() *TssMetric {
	this := TssMetric{}
	return &this
}

// NewTssMetricWithDefaults instantiates a new TssMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTssMetricWithDefaults() *TssMetric {
	this := TssMetric{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *TssMetric) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TssMetric) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *TssMetric) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *TssMetric) SetAddress(v string) {
	o.Address = &v
}

// GetTssTime returns the TssTime field value if set, zero value otherwise.
func (o *TssMetric) GetTssTime() int64 {
	if o == nil || o.TssTime == nil {
		var ret int64
		return ret
	}
	return *o.TssTime
}

// GetTssTimeOk returns a tuple with the TssTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TssMetric) GetTssTimeOk() (*int64, bool) {
	if o == nil || o.TssTime == nil {
		return nil, false
	}
	return o.TssTime, true
}

// HasTssTime returns a boolean if a field has been set.
func (o *TssMetric) HasTssTime() bool {
	if o != nil && o.TssTime != nil {
		return true
	}

	return false
}

// SetTssTime gets a reference to the given int64 and assigns it to the TssTime field.
func (o *TssMetric) SetTssTime(v int64) {
	o.TssTime = &v
}

func (o TssMetric) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.TssTime != nil {
		toSerialize["tss_time"] = o.TssTime
	}
	return json.Marshal(toSerialize)
}

type NullableTssMetric struct {
	value *TssMetric
	isSet bool
}

func (v NullableTssMetric) Get() *TssMetric {
	return v.value
}

func (v *NullableTssMetric) Set(val *TssMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableTssMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableTssMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTssMetric(val *TssMetric) *NullableTssMetric {
	return &NullableTssMetric{value: val, isSet: true}
}

func (v NullableTssMetric) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTssMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


