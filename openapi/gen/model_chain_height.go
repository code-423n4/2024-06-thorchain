/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ChainHeight struct for ChainHeight
type ChainHeight struct {
	Chain string `json:"chain"`
	Height int64 `json:"height"`
}

// NewChainHeight instantiates a new ChainHeight object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChainHeight(chain string, height int64) *ChainHeight {
	this := ChainHeight{}
	this.Chain = chain
	this.Height = height
	return &this
}

// NewChainHeightWithDefaults instantiates a new ChainHeight object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChainHeightWithDefaults() *ChainHeight {
	this := ChainHeight{}
	return &this
}

// GetChain returns the Chain field value
func (o *ChainHeight) GetChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Chain
}

// GetChainOk returns a tuple with the Chain field value
// and a boolean to check if the value has been set.
func (o *ChainHeight) GetChainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Chain, true
}

// SetChain sets field value
func (o *ChainHeight) SetChain(v string) {
	o.Chain = v
}

// GetHeight returns the Height field value
func (o *ChainHeight) GetHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *ChainHeight) GetHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *ChainHeight) SetHeight(v int64) {
	o.Height = v
}

func (o ChainHeight) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["chain"] = o.Chain
	}
	if true {
		toSerialize["height"] = o.Height
	}
	return json.Marshal(toSerialize)
}

type NullableChainHeight struct {
	value *ChainHeight
	isSet bool
}

func (v NullableChainHeight) Get() *ChainHeight {
	return v.value
}

func (v *NullableChainHeight) Set(val *ChainHeight) {
	v.value = val
	v.isSet = true
}

func (v NullableChainHeight) IsSet() bool {
	return v.isSet
}

func (v *NullableChainHeight) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChainHeight(val *ChainHeight) *NullableChainHeight {
	return &NullableChainHeight{value: val, isSet: true}
}

func (v NullableChainHeight) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChainHeight) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


