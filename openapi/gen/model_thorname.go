/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Thorname struct for Thorname
type Thorname struct {
	Name *string `json:"name,omitempty"`
	ExpireBlockHeight *int64 `json:"expire_block_height,omitempty"`
	Owner *string `json:"owner,omitempty"`
	PreferredAsset string `json:"preferred_asset"`
	// Amount of RUNE currently accrued by this thorname in affiliate fees waiting to be swapped to preferred asset.
	AffiliateCollectorRune *string `json:"affiliate_collector_rune,omitempty"`
	Aliases []ThornameAlias `json:"aliases"`
}

// NewThorname instantiates a new Thorname object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThorname(preferredAsset string, aliases []ThornameAlias) *Thorname {
	this := Thorname{}
	this.PreferredAsset = preferredAsset
	this.Aliases = aliases
	return &this
}

// NewThornameWithDefaults instantiates a new Thorname object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThornameWithDefaults() *Thorname {
	this := Thorname{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Thorname) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Thorname) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Thorname) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Thorname) SetName(v string) {
	o.Name = &v
}

// GetExpireBlockHeight returns the ExpireBlockHeight field value if set, zero value otherwise.
func (o *Thorname) GetExpireBlockHeight() int64 {
	if o == nil || o.ExpireBlockHeight == nil {
		var ret int64
		return ret
	}
	return *o.ExpireBlockHeight
}

// GetExpireBlockHeightOk returns a tuple with the ExpireBlockHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Thorname) GetExpireBlockHeightOk() (*int64, bool) {
	if o == nil || o.ExpireBlockHeight == nil {
		return nil, false
	}
	return o.ExpireBlockHeight, true
}

// HasExpireBlockHeight returns a boolean if a field has been set.
func (o *Thorname) HasExpireBlockHeight() bool {
	if o != nil && o.ExpireBlockHeight != nil {
		return true
	}

	return false
}

// SetExpireBlockHeight gets a reference to the given int64 and assigns it to the ExpireBlockHeight field.
func (o *Thorname) SetExpireBlockHeight(v int64) {
	o.ExpireBlockHeight = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Thorname) GetOwner() string {
	if o == nil || o.Owner == nil {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Thorname) GetOwnerOk() (*string, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Thorname) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *Thorname) SetOwner(v string) {
	o.Owner = &v
}

// GetPreferredAsset returns the PreferredAsset field value
func (o *Thorname) GetPreferredAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PreferredAsset
}

// GetPreferredAssetOk returns a tuple with the PreferredAsset field value
// and a boolean to check if the value has been set.
func (o *Thorname) GetPreferredAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreferredAsset, true
}

// SetPreferredAsset sets field value
func (o *Thorname) SetPreferredAsset(v string) {
	o.PreferredAsset = v
}

// GetAffiliateCollectorRune returns the AffiliateCollectorRune field value if set, zero value otherwise.
func (o *Thorname) GetAffiliateCollectorRune() string {
	if o == nil || o.AffiliateCollectorRune == nil {
		var ret string
		return ret
	}
	return *o.AffiliateCollectorRune
}

// GetAffiliateCollectorRuneOk returns a tuple with the AffiliateCollectorRune field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Thorname) GetAffiliateCollectorRuneOk() (*string, bool) {
	if o == nil || o.AffiliateCollectorRune == nil {
		return nil, false
	}
	return o.AffiliateCollectorRune, true
}

// HasAffiliateCollectorRune returns a boolean if a field has been set.
func (o *Thorname) HasAffiliateCollectorRune() bool {
	if o != nil && o.AffiliateCollectorRune != nil {
		return true
	}

	return false
}

// SetAffiliateCollectorRune gets a reference to the given string and assigns it to the AffiliateCollectorRune field.
func (o *Thorname) SetAffiliateCollectorRune(v string) {
	o.AffiliateCollectorRune = &v
}

// GetAliases returns the Aliases field value
func (o *Thorname) GetAliases() []ThornameAlias {
	if o == nil {
		var ret []ThornameAlias
		return ret
	}

	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value
// and a boolean to check if the value has been set.
func (o *Thorname) GetAliasesOk() ([]ThornameAlias, bool) {
	if o == nil {
		return nil, false
	}
	return o.Aliases, true
}

// SetAliases sets field value
func (o *Thorname) SetAliases(v []ThornameAlias) {
	o.Aliases = v
}

func (o Thorname) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ExpireBlockHeight != nil {
		toSerialize["expire_block_height"] = o.ExpireBlockHeight
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["preferred_asset"] = o.PreferredAsset
	}
	if o.AffiliateCollectorRune != nil {
		toSerialize["affiliate_collector_rune"] = o.AffiliateCollectorRune
	}
	if true {
		toSerialize["aliases"] = o.Aliases
	}
	return json.Marshal(toSerialize)
}

type NullableThorname struct {
	value *Thorname
	isSet bool
}

func (v NullableThorname) Get() *Thorname {
	return v.value
}

func (v *NullableThorname) Set(val *Thorname) {
	v.value = val
	v.isSet = true
}

func (v NullableThorname) IsSet() bool {
	return v.isSet
}

func (v *NullableThorname) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThorname(val *Thorname) *NullableThorname {
	return &NullableThorname{value: val, isSet: true}
}

func (v NullableThorname) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThorname) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


