/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DerivedPool struct for DerivedPool
type DerivedPool struct {
	Asset string `json:"asset"`
	Status string `json:"status"`
	Decimals *int64 `json:"decimals,omitempty"`
	BalanceAsset string `json:"balance_asset"`
	BalanceRune string `json:"balance_rune"`
	// the depth of the derived virtual pool relative to L1 pool (in basis points)
	DerivedDepthBps string `json:"derived_depth_bps"`
}

// NewDerivedPool instantiates a new DerivedPool object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDerivedPool(asset string, status string, balanceAsset string, balanceRune string, derivedDepthBps string) *DerivedPool {
	this := DerivedPool{}
	this.Asset = asset
	this.Status = status
	this.BalanceAsset = balanceAsset
	this.BalanceRune = balanceRune
	this.DerivedDepthBps = derivedDepthBps
	return &this
}

// NewDerivedPoolWithDefaults instantiates a new DerivedPool object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDerivedPoolWithDefaults() *DerivedPool {
	this := DerivedPool{}
	return &this
}

// GetAsset returns the Asset field value
func (o *DerivedPool) GetAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value
// and a boolean to check if the value has been set.
func (o *DerivedPool) GetAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Asset, true
}

// SetAsset sets field value
func (o *DerivedPool) SetAsset(v string) {
	o.Asset = v
}

// GetStatus returns the Status field value
func (o *DerivedPool) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DerivedPool) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DerivedPool) SetStatus(v string) {
	o.Status = v
}

// GetDecimals returns the Decimals field value if set, zero value otherwise.
func (o *DerivedPool) GetDecimals() int64 {
	if o == nil || o.Decimals == nil {
		var ret int64
		return ret
	}
	return *o.Decimals
}

// GetDecimalsOk returns a tuple with the Decimals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DerivedPool) GetDecimalsOk() (*int64, bool) {
	if o == nil || o.Decimals == nil {
		return nil, false
	}
	return o.Decimals, true
}

// HasDecimals returns a boolean if a field has been set.
func (o *DerivedPool) HasDecimals() bool {
	if o != nil && o.Decimals != nil {
		return true
	}

	return false
}

// SetDecimals gets a reference to the given int64 and assigns it to the Decimals field.
func (o *DerivedPool) SetDecimals(v int64) {
	o.Decimals = &v
}

// GetBalanceAsset returns the BalanceAsset field value
func (o *DerivedPool) GetBalanceAsset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceAsset
}

// GetBalanceAssetOk returns a tuple with the BalanceAsset field value
// and a boolean to check if the value has been set.
func (o *DerivedPool) GetBalanceAssetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceAsset, true
}

// SetBalanceAsset sets field value
func (o *DerivedPool) SetBalanceAsset(v string) {
	o.BalanceAsset = v
}

// GetBalanceRune returns the BalanceRune field value
func (o *DerivedPool) GetBalanceRune() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BalanceRune
}

// GetBalanceRuneOk returns a tuple with the BalanceRune field value
// and a boolean to check if the value has been set.
func (o *DerivedPool) GetBalanceRuneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BalanceRune, true
}

// SetBalanceRune sets field value
func (o *DerivedPool) SetBalanceRune(v string) {
	o.BalanceRune = v
}

// GetDerivedDepthBps returns the DerivedDepthBps field value
func (o *DerivedPool) GetDerivedDepthBps() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DerivedDepthBps
}

// GetDerivedDepthBpsOk returns a tuple with the DerivedDepthBps field value
// and a boolean to check if the value has been set.
func (o *DerivedPool) GetDerivedDepthBpsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DerivedDepthBps, true
}

// SetDerivedDepthBps sets field value
func (o *DerivedPool) SetDerivedDepthBps(v string) {
	o.DerivedDepthBps = v
}

func (o DerivedPool) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["asset"] = o.Asset
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Decimals != nil {
		toSerialize["decimals"] = o.Decimals
	}
	if true {
		toSerialize["balance_asset"] = o.BalanceAsset
	}
	if true {
		toSerialize["balance_rune"] = o.BalanceRune
	}
	if true {
		toSerialize["derived_depth_bps"] = o.DerivedDepthBps
	}
	return json.Marshal(toSerialize)
}

type NullableDerivedPool struct {
	value *DerivedPool
	isSet bool
}

func (v NullableDerivedPool) Get() *DerivedPool {
	return v.value
}

func (v *NullableDerivedPool) Set(val *DerivedPool) {
	v.value = val
	v.isSet = true
}

func (v NullableDerivedPool) IsSet() bool {
	return v.isSet
}

func (v *NullableDerivedPool) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDerivedPool(val *DerivedPool) *NullableDerivedPool {
	return &NullableDerivedPool{value: val, isSet: true}
}

func (v NullableDerivedPool) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDerivedPool) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


