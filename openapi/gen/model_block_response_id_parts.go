/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BlockResponseIdParts struct for BlockResponseIdParts
type BlockResponseIdParts struct {
	Total int64 `json:"total"`
	Hash string `json:"hash"`
}

// NewBlockResponseIdParts instantiates a new BlockResponseIdParts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockResponseIdParts(total int64, hash string) *BlockResponseIdParts {
	this := BlockResponseIdParts{}
	this.Total = total
	this.Hash = hash
	return &this
}

// NewBlockResponseIdPartsWithDefaults instantiates a new BlockResponseIdParts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockResponseIdPartsWithDefaults() *BlockResponseIdParts {
	this := BlockResponseIdParts{}
	return &this
}

// GetTotal returns the Total field value
func (o *BlockResponseIdParts) GetTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *BlockResponseIdParts) GetTotalOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *BlockResponseIdParts) SetTotal(v int64) {
	o.Total = v
}

// GetHash returns the Hash field value
func (o *BlockResponseIdParts) GetHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hash
}

// GetHashOk returns a tuple with the Hash field value
// and a boolean to check if the value has been set.
func (o *BlockResponseIdParts) GetHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hash, true
}

// SetHash sets field value
func (o *BlockResponseIdParts) SetHash(v string) {
	o.Hash = v
}

func (o BlockResponseIdParts) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["hash"] = o.Hash
	}
	return json.Marshal(toSerialize)
}

type NullableBlockResponseIdParts struct {
	value *BlockResponseIdParts
	isSet bool
}

func (v NullableBlockResponseIdParts) Get() *BlockResponseIdParts {
	return v.value
}

func (v *NullableBlockResponseIdParts) Set(val *BlockResponseIdParts) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockResponseIdParts) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockResponseIdParts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockResponseIdParts(val *BlockResponseIdParts) *NullableBlockResponseIdParts {
	return &NullableBlockResponseIdParts{value: val, isSet: true}
}

func (v NullableBlockResponseIdParts) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockResponseIdParts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


