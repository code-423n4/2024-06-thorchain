/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BaseQuoteResponse struct for BaseQuoteResponse
type BaseQuoteResponse struct {
	// the inbound address for the transaction on the source chain
	InboundAddress *string `json:"inbound_address,omitempty"`
	// the approximate number of source chain blocks required before processing
	InboundConfirmationBlocks *int64 `json:"inbound_confirmation_blocks,omitempty"`
	// the approximate seconds for block confirmations required before processing
	InboundConfirmationSeconds *int64 `json:"inbound_confirmation_seconds,omitempty"`
	// the number of thorchain blocks the outbound will be delayed
	OutboundDelayBlocks *int64 `json:"outbound_delay_blocks,omitempty"`
	// the approximate seconds for the outbound delay before it will be sent
	OutboundDelaySeconds *int64 `json:"outbound_delay_seconds,omitempty"`
	Fees *QuoteFees `json:"fees,omitempty"`
	// Deprecated - migrate to fees object.
	SlippageBps *int64 `json:"slippage_bps,omitempty"`
	// Deprecated - migrate to fees object.
	StreamingSlippageBps *int64 `json:"streaming_slippage_bps,omitempty"`
	// the EVM chain router contract address
	Router *string `json:"router,omitempty"`
	// expiration timestamp in unix seconds
	Expiry *int64 `json:"expiry,omitempty"`
	// static warning message
	Warning *string `json:"warning,omitempty"`
	// chain specific quote notes
	Notes *string `json:"notes,omitempty"`
	// Defines the minimum transaction size for the chain in base units (sats, wei, uatom). Transactions with asset amounts lower than the dust_threshold are ignored.
	DustThreshold *string `json:"dust_threshold,omitempty"`
	// The recommended minimum inbound amount for this transaction type & inbound asset. Sending less than this amount could result in failed refunds.
	RecommendedMinAmountIn *string `json:"recommended_min_amount_in,omitempty"`
	// the recommended gas rate to use for the inbound to ensure timely confirmation
	RecommendedGasRate *string `json:"recommended_gas_rate,omitempty"`
	// the units of the recommended gas rate
	GasRateUnits *string `json:"gas_rate_units,omitempty"`
}

// NewBaseQuoteResponse instantiates a new BaseQuoteResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseQuoteResponse() *BaseQuoteResponse {
	this := BaseQuoteResponse{}
	return &this
}

// NewBaseQuoteResponseWithDefaults instantiates a new BaseQuoteResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseQuoteResponseWithDefaults() *BaseQuoteResponse {
	this := BaseQuoteResponse{}
	return &this
}

// GetInboundAddress returns the InboundAddress field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetInboundAddress() string {
	if o == nil || o.InboundAddress == nil {
		var ret string
		return ret
	}
	return *o.InboundAddress
}

// GetInboundAddressOk returns a tuple with the InboundAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetInboundAddressOk() (*string, bool) {
	if o == nil || o.InboundAddress == nil {
		return nil, false
	}
	return o.InboundAddress, true
}

// HasInboundAddress returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasInboundAddress() bool {
	if o != nil && o.InboundAddress != nil {
		return true
	}

	return false
}

// SetInboundAddress gets a reference to the given string and assigns it to the InboundAddress field.
func (o *BaseQuoteResponse) SetInboundAddress(v string) {
	o.InboundAddress = &v
}

// GetInboundConfirmationBlocks returns the InboundConfirmationBlocks field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetInboundConfirmationBlocks() int64 {
	if o == nil || o.InboundConfirmationBlocks == nil {
		var ret int64
		return ret
	}
	return *o.InboundConfirmationBlocks
}

// GetInboundConfirmationBlocksOk returns a tuple with the InboundConfirmationBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetInboundConfirmationBlocksOk() (*int64, bool) {
	if o == nil || o.InboundConfirmationBlocks == nil {
		return nil, false
	}
	return o.InboundConfirmationBlocks, true
}

// HasInboundConfirmationBlocks returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasInboundConfirmationBlocks() bool {
	if o != nil && o.InboundConfirmationBlocks != nil {
		return true
	}

	return false
}

// SetInboundConfirmationBlocks gets a reference to the given int64 and assigns it to the InboundConfirmationBlocks field.
func (o *BaseQuoteResponse) SetInboundConfirmationBlocks(v int64) {
	o.InboundConfirmationBlocks = &v
}

// GetInboundConfirmationSeconds returns the InboundConfirmationSeconds field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetInboundConfirmationSeconds() int64 {
	if o == nil || o.InboundConfirmationSeconds == nil {
		var ret int64
		return ret
	}
	return *o.InboundConfirmationSeconds
}

// GetInboundConfirmationSecondsOk returns a tuple with the InboundConfirmationSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetInboundConfirmationSecondsOk() (*int64, bool) {
	if o == nil || o.InboundConfirmationSeconds == nil {
		return nil, false
	}
	return o.InboundConfirmationSeconds, true
}

// HasInboundConfirmationSeconds returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasInboundConfirmationSeconds() bool {
	if o != nil && o.InboundConfirmationSeconds != nil {
		return true
	}

	return false
}

// SetInboundConfirmationSeconds gets a reference to the given int64 and assigns it to the InboundConfirmationSeconds field.
func (o *BaseQuoteResponse) SetInboundConfirmationSeconds(v int64) {
	o.InboundConfirmationSeconds = &v
}

// GetOutboundDelayBlocks returns the OutboundDelayBlocks field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetOutboundDelayBlocks() int64 {
	if o == nil || o.OutboundDelayBlocks == nil {
		var ret int64
		return ret
	}
	return *o.OutboundDelayBlocks
}

// GetOutboundDelayBlocksOk returns a tuple with the OutboundDelayBlocks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetOutboundDelayBlocksOk() (*int64, bool) {
	if o == nil || o.OutboundDelayBlocks == nil {
		return nil, false
	}
	return o.OutboundDelayBlocks, true
}

// HasOutboundDelayBlocks returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasOutboundDelayBlocks() bool {
	if o != nil && o.OutboundDelayBlocks != nil {
		return true
	}

	return false
}

// SetOutboundDelayBlocks gets a reference to the given int64 and assigns it to the OutboundDelayBlocks field.
func (o *BaseQuoteResponse) SetOutboundDelayBlocks(v int64) {
	o.OutboundDelayBlocks = &v
}

// GetOutboundDelaySeconds returns the OutboundDelaySeconds field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetOutboundDelaySeconds() int64 {
	if o == nil || o.OutboundDelaySeconds == nil {
		var ret int64
		return ret
	}
	return *o.OutboundDelaySeconds
}

// GetOutboundDelaySecondsOk returns a tuple with the OutboundDelaySeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetOutboundDelaySecondsOk() (*int64, bool) {
	if o == nil || o.OutboundDelaySeconds == nil {
		return nil, false
	}
	return o.OutboundDelaySeconds, true
}

// HasOutboundDelaySeconds returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasOutboundDelaySeconds() bool {
	if o != nil && o.OutboundDelaySeconds != nil {
		return true
	}

	return false
}

// SetOutboundDelaySeconds gets a reference to the given int64 and assigns it to the OutboundDelaySeconds field.
func (o *BaseQuoteResponse) SetOutboundDelaySeconds(v int64) {
	o.OutboundDelaySeconds = &v
}

// GetFees returns the Fees field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetFees() QuoteFees {
	if o == nil || o.Fees == nil {
		var ret QuoteFees
		return ret
	}
	return *o.Fees
}

// GetFeesOk returns a tuple with the Fees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetFeesOk() (*QuoteFees, bool) {
	if o == nil || o.Fees == nil {
		return nil, false
	}
	return o.Fees, true
}

// HasFees returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasFees() bool {
	if o != nil && o.Fees != nil {
		return true
	}

	return false
}

// SetFees gets a reference to the given QuoteFees and assigns it to the Fees field.
func (o *BaseQuoteResponse) SetFees(v QuoteFees) {
	o.Fees = &v
}

// GetSlippageBps returns the SlippageBps field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetSlippageBps() int64 {
	if o == nil || o.SlippageBps == nil {
		var ret int64
		return ret
	}
	return *o.SlippageBps
}

// GetSlippageBpsOk returns a tuple with the SlippageBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetSlippageBpsOk() (*int64, bool) {
	if o == nil || o.SlippageBps == nil {
		return nil, false
	}
	return o.SlippageBps, true
}

// HasSlippageBps returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasSlippageBps() bool {
	if o != nil && o.SlippageBps != nil {
		return true
	}

	return false
}

// SetSlippageBps gets a reference to the given int64 and assigns it to the SlippageBps field.
func (o *BaseQuoteResponse) SetSlippageBps(v int64) {
	o.SlippageBps = &v
}

// GetStreamingSlippageBps returns the StreamingSlippageBps field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetStreamingSlippageBps() int64 {
	if o == nil || o.StreamingSlippageBps == nil {
		var ret int64
		return ret
	}
	return *o.StreamingSlippageBps
}

// GetStreamingSlippageBpsOk returns a tuple with the StreamingSlippageBps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetStreamingSlippageBpsOk() (*int64, bool) {
	if o == nil || o.StreamingSlippageBps == nil {
		return nil, false
	}
	return o.StreamingSlippageBps, true
}

// HasStreamingSlippageBps returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasStreamingSlippageBps() bool {
	if o != nil && o.StreamingSlippageBps != nil {
		return true
	}

	return false
}

// SetStreamingSlippageBps gets a reference to the given int64 and assigns it to the StreamingSlippageBps field.
func (o *BaseQuoteResponse) SetStreamingSlippageBps(v int64) {
	o.StreamingSlippageBps = &v
}

// GetRouter returns the Router field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetRouter() string {
	if o == nil || o.Router == nil {
		var ret string
		return ret
	}
	return *o.Router
}

// GetRouterOk returns a tuple with the Router field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetRouterOk() (*string, bool) {
	if o == nil || o.Router == nil {
		return nil, false
	}
	return o.Router, true
}

// HasRouter returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasRouter() bool {
	if o != nil && o.Router != nil {
		return true
	}

	return false
}

// SetRouter gets a reference to the given string and assigns it to the Router field.
func (o *BaseQuoteResponse) SetRouter(v string) {
	o.Router = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetExpiry() int64 {
	if o == nil || o.Expiry == nil {
		var ret int64
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetExpiryOk() (*int64, bool) {
	if o == nil || o.Expiry == nil {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasExpiry() bool {
	if o != nil && o.Expiry != nil {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given int64 and assigns it to the Expiry field.
func (o *BaseQuoteResponse) SetExpiry(v int64) {
	o.Expiry = &v
}

// GetWarning returns the Warning field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetWarning() string {
	if o == nil || o.Warning == nil {
		var ret string
		return ret
	}
	return *o.Warning
}

// GetWarningOk returns a tuple with the Warning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetWarningOk() (*string, bool) {
	if o == nil || o.Warning == nil {
		return nil, false
	}
	return o.Warning, true
}

// HasWarning returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasWarning() bool {
	if o != nil && o.Warning != nil {
		return true
	}

	return false
}

// SetWarning gets a reference to the given string and assigns it to the Warning field.
func (o *BaseQuoteResponse) SetWarning(v string) {
	o.Warning = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetNotes() string {
	if o == nil || o.Notes == nil {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetNotesOk() (*string, bool) {
	if o == nil || o.Notes == nil {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasNotes() bool {
	if o != nil && o.Notes != nil {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *BaseQuoteResponse) SetNotes(v string) {
	o.Notes = &v
}

// GetDustThreshold returns the DustThreshold field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetDustThreshold() string {
	if o == nil || o.DustThreshold == nil {
		var ret string
		return ret
	}
	return *o.DustThreshold
}

// GetDustThresholdOk returns a tuple with the DustThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetDustThresholdOk() (*string, bool) {
	if o == nil || o.DustThreshold == nil {
		return nil, false
	}
	return o.DustThreshold, true
}

// HasDustThreshold returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasDustThreshold() bool {
	if o != nil && o.DustThreshold != nil {
		return true
	}

	return false
}

// SetDustThreshold gets a reference to the given string and assigns it to the DustThreshold field.
func (o *BaseQuoteResponse) SetDustThreshold(v string) {
	o.DustThreshold = &v
}

// GetRecommendedMinAmountIn returns the RecommendedMinAmountIn field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetRecommendedMinAmountIn() string {
	if o == nil || o.RecommendedMinAmountIn == nil {
		var ret string
		return ret
	}
	return *o.RecommendedMinAmountIn
}

// GetRecommendedMinAmountInOk returns a tuple with the RecommendedMinAmountIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetRecommendedMinAmountInOk() (*string, bool) {
	if o == nil || o.RecommendedMinAmountIn == nil {
		return nil, false
	}
	return o.RecommendedMinAmountIn, true
}

// HasRecommendedMinAmountIn returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasRecommendedMinAmountIn() bool {
	if o != nil && o.RecommendedMinAmountIn != nil {
		return true
	}

	return false
}

// SetRecommendedMinAmountIn gets a reference to the given string and assigns it to the RecommendedMinAmountIn field.
func (o *BaseQuoteResponse) SetRecommendedMinAmountIn(v string) {
	o.RecommendedMinAmountIn = &v
}

// GetRecommendedGasRate returns the RecommendedGasRate field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetRecommendedGasRate() string {
	if o == nil || o.RecommendedGasRate == nil {
		var ret string
		return ret
	}
	return *o.RecommendedGasRate
}

// GetRecommendedGasRateOk returns a tuple with the RecommendedGasRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetRecommendedGasRateOk() (*string, bool) {
	if o == nil || o.RecommendedGasRate == nil {
		return nil, false
	}
	return o.RecommendedGasRate, true
}

// HasRecommendedGasRate returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasRecommendedGasRate() bool {
	if o != nil && o.RecommendedGasRate != nil {
		return true
	}

	return false
}

// SetRecommendedGasRate gets a reference to the given string and assigns it to the RecommendedGasRate field.
func (o *BaseQuoteResponse) SetRecommendedGasRate(v string) {
	o.RecommendedGasRate = &v
}

// GetGasRateUnits returns the GasRateUnits field value if set, zero value otherwise.
func (o *BaseQuoteResponse) GetGasRateUnits() string {
	if o == nil || o.GasRateUnits == nil {
		var ret string
		return ret
	}
	return *o.GasRateUnits
}

// GetGasRateUnitsOk returns a tuple with the GasRateUnits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseQuoteResponse) GetGasRateUnitsOk() (*string, bool) {
	if o == nil || o.GasRateUnits == nil {
		return nil, false
	}
	return o.GasRateUnits, true
}

// HasGasRateUnits returns a boolean if a field has been set.
func (o *BaseQuoteResponse) HasGasRateUnits() bool {
	if o != nil && o.GasRateUnits != nil {
		return true
	}

	return false
}

// SetGasRateUnits gets a reference to the given string and assigns it to the GasRateUnits field.
func (o *BaseQuoteResponse) SetGasRateUnits(v string) {
	o.GasRateUnits = &v
}

func (o BaseQuoteResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InboundAddress != nil {
		toSerialize["inbound_address"] = o.InboundAddress
	}
	if o.InboundConfirmationBlocks != nil {
		toSerialize["inbound_confirmation_blocks"] = o.InboundConfirmationBlocks
	}
	if o.InboundConfirmationSeconds != nil {
		toSerialize["inbound_confirmation_seconds"] = o.InboundConfirmationSeconds
	}
	if o.OutboundDelayBlocks != nil {
		toSerialize["outbound_delay_blocks"] = o.OutboundDelayBlocks
	}
	if o.OutboundDelaySeconds != nil {
		toSerialize["outbound_delay_seconds"] = o.OutboundDelaySeconds
	}
	if o.Fees != nil {
		toSerialize["fees"] = o.Fees
	}
	if o.SlippageBps != nil {
		toSerialize["slippage_bps"] = o.SlippageBps
	}
	if o.StreamingSlippageBps != nil {
		toSerialize["streaming_slippage_bps"] = o.StreamingSlippageBps
	}
	if o.Router != nil {
		toSerialize["router"] = o.Router
	}
	if o.Expiry != nil {
		toSerialize["expiry"] = o.Expiry
	}
	if o.Warning != nil {
		toSerialize["warning"] = o.Warning
	}
	if o.Notes != nil {
		toSerialize["notes"] = o.Notes
	}
	if o.DustThreshold != nil {
		toSerialize["dust_threshold"] = o.DustThreshold
	}
	if o.RecommendedMinAmountIn != nil {
		toSerialize["recommended_min_amount_in"] = o.RecommendedMinAmountIn
	}
	if o.RecommendedGasRate != nil {
		toSerialize["recommended_gas_rate"] = o.RecommendedGasRate
	}
	if o.GasRateUnits != nil {
		toSerialize["gas_rate_units"] = o.GasRateUnits
	}
	return json.Marshal(toSerialize)
}

type NullableBaseQuoteResponse struct {
	value *BaseQuoteResponse
	isSet bool
}

func (v NullableBaseQuoteResponse) Get() *BaseQuoteResponse {
	return v.value
}

func (v *NullableBaseQuoteResponse) Set(val *BaseQuoteResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseQuoteResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseQuoteResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseQuoteResponse(val *BaseQuoteResponse) *NullableBaseQuoteResponse {
	return &NullableBaseQuoteResponse{value: val, isSet: true}
}

func (v NullableBaseQuoteResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseQuoteResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


