/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VersionResponse struct for VersionResponse
type VersionResponse struct {
	// current version
	Current string `json:"current"`
	// next version (minimum version for a node to become Active)
	Next string `json:"next"`
	// height at which the minimum joining version last changed
	NextSinceHeight *int64 `json:"next_since_height,omitempty"`
	// querier version
	Querier string `json:"querier"`
}

// NewVersionResponse instantiates a new VersionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionResponse(current string, next string, querier string) *VersionResponse {
	this := VersionResponse{}
	this.Current = current
	this.Next = next
	this.Querier = querier
	return &this
}

// NewVersionResponseWithDefaults instantiates a new VersionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionResponseWithDefaults() *VersionResponse {
	this := VersionResponse{}
	return &this
}

// GetCurrent returns the Current field value
func (o *VersionResponse) GetCurrent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value
// and a boolean to check if the value has been set.
func (o *VersionResponse) GetCurrentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Current, true
}

// SetCurrent sets field value
func (o *VersionResponse) SetCurrent(v string) {
	o.Current = v
}

// GetNext returns the Next field value
func (o *VersionResponse) GetNext() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Next
}

// GetNextOk returns a tuple with the Next field value
// and a boolean to check if the value has been set.
func (o *VersionResponse) GetNextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Next, true
}

// SetNext sets field value
func (o *VersionResponse) SetNext(v string) {
	o.Next = v
}

// GetNextSinceHeight returns the NextSinceHeight field value if set, zero value otherwise.
func (o *VersionResponse) GetNextSinceHeight() int64 {
	if o == nil || o.NextSinceHeight == nil {
		var ret int64
		return ret
	}
	return *o.NextSinceHeight
}

// GetNextSinceHeightOk returns a tuple with the NextSinceHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionResponse) GetNextSinceHeightOk() (*int64, bool) {
	if o == nil || o.NextSinceHeight == nil {
		return nil, false
	}
	return o.NextSinceHeight, true
}

// HasNextSinceHeight returns a boolean if a field has been set.
func (o *VersionResponse) HasNextSinceHeight() bool {
	if o != nil && o.NextSinceHeight != nil {
		return true
	}

	return false
}

// SetNextSinceHeight gets a reference to the given int64 and assigns it to the NextSinceHeight field.
func (o *VersionResponse) SetNextSinceHeight(v int64) {
	o.NextSinceHeight = &v
}

// GetQuerier returns the Querier field value
func (o *VersionResponse) GetQuerier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Querier
}

// GetQuerierOk returns a tuple with the Querier field value
// and a boolean to check if the value has been set.
func (o *VersionResponse) GetQuerierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Querier, true
}

// SetQuerier sets field value
func (o *VersionResponse) SetQuerier(v string) {
	o.Querier = v
}

func (o VersionResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["current"] = o.Current
	}
	if true {
		toSerialize["next"] = o.Next
	}
	if o.NextSinceHeight != nil {
		toSerialize["next_since_height"] = o.NextSinceHeight
	}
	if true {
		toSerialize["querier"] = o.Querier
	}
	return json.Marshal(toSerialize)
}

type NullableVersionResponse struct {
	value *VersionResponse
	isSet bool
}

func (v NullableVersionResponse) Get() *VersionResponse {
	return v.value
}

func (v *NullableVersionResponse) Set(val *VersionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionResponse(val *VersionResponse) *NullableVersionResponse {
	return &NullableVersionResponse{value: val, isSet: true}
}

func (v NullableVersionResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


