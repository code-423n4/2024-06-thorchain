/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvariantResponse struct for InvariantResponse
type InvariantResponse struct {
	// The name of the invariant.
	Invariant string `json:"invariant"`
	// Returns true if the invariant is broken.
	Broken bool `json:"broken"`
	// Informative message about the invariant result.
	Msg []string `json:"msg"`
}

// NewInvariantResponse instantiates a new InvariantResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvariantResponse(invariant string, broken bool, msg []string) *InvariantResponse {
	this := InvariantResponse{}
	this.Invariant = invariant
	this.Broken = broken
	this.Msg = msg
	return &this
}

// NewInvariantResponseWithDefaults instantiates a new InvariantResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvariantResponseWithDefaults() *InvariantResponse {
	this := InvariantResponse{}
	return &this
}

// GetInvariant returns the Invariant field value
func (o *InvariantResponse) GetInvariant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Invariant
}

// GetInvariantOk returns a tuple with the Invariant field value
// and a boolean to check if the value has been set.
func (o *InvariantResponse) GetInvariantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Invariant, true
}

// SetInvariant sets field value
func (o *InvariantResponse) SetInvariant(v string) {
	o.Invariant = v
}

// GetBroken returns the Broken field value
func (o *InvariantResponse) GetBroken() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Broken
}

// GetBrokenOk returns a tuple with the Broken field value
// and a boolean to check if the value has been set.
func (o *InvariantResponse) GetBrokenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Broken, true
}

// SetBroken sets field value
func (o *InvariantResponse) SetBroken(v bool) {
	o.Broken = v
}

// GetMsg returns the Msg field value
func (o *InvariantResponse) GetMsg() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *InvariantResponse) GetMsgOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Msg, true
}

// SetMsg sets field value
func (o *InvariantResponse) SetMsg(v []string) {
	o.Msg = v
}

func (o InvariantResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["invariant"] = o.Invariant
	}
	if true {
		toSerialize["broken"] = o.Broken
	}
	if true {
		toSerialize["msg"] = o.Msg
	}
	return json.Marshal(toSerialize)
}

type NullableInvariantResponse struct {
	value *InvariantResponse
	isSet bool
}

func (v NullableInvariantResponse) Get() *InvariantResponse {
	return v.value
}

func (v *NullableInvariantResponse) Set(val *InvariantResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInvariantResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInvariantResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvariantResponse(val *InvariantResponse) *NullableInvariantResponse {
	return &NullableInvariantResponse{value: val, isSet: true}
}

func (v NullableInvariantResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvariantResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


