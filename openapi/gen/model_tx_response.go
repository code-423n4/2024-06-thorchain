/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TxResponse struct for TxResponse
type TxResponse struct {
	ObservedTx *ObservedTx `json:"observed_tx,omitempty"`
	// the thorchain height at which the inbound reached consensus
	ConsensusHeight *int64 `json:"consensus_height,omitempty"`
	// the thorchain height at which the outbound was finalised
	FinalisedHeight *int64 `json:"finalised_height,omitempty"`
	// the thorchain height for which the outbound was scheduled
	OutboundHeight *int64 `json:"outbound_height,omitempty"`
	KeysignMetric *TssKeysignMetric `json:"keysign_metric,omitempty"`
}

// NewTxResponse instantiates a new TxResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTxResponse() *TxResponse {
	this := TxResponse{}
	return &this
}

// NewTxResponseWithDefaults instantiates a new TxResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTxResponseWithDefaults() *TxResponse {
	this := TxResponse{}
	return &this
}

// GetObservedTx returns the ObservedTx field value if set, zero value otherwise.
func (o *TxResponse) GetObservedTx() ObservedTx {
	if o == nil || o.ObservedTx == nil {
		var ret ObservedTx
		return ret
	}
	return *o.ObservedTx
}

// GetObservedTxOk returns a tuple with the ObservedTx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxResponse) GetObservedTxOk() (*ObservedTx, bool) {
	if o == nil || o.ObservedTx == nil {
		return nil, false
	}
	return o.ObservedTx, true
}

// HasObservedTx returns a boolean if a field has been set.
func (o *TxResponse) HasObservedTx() bool {
	if o != nil && o.ObservedTx != nil {
		return true
	}

	return false
}

// SetObservedTx gets a reference to the given ObservedTx and assigns it to the ObservedTx field.
func (o *TxResponse) SetObservedTx(v ObservedTx) {
	o.ObservedTx = &v
}

// GetConsensusHeight returns the ConsensusHeight field value if set, zero value otherwise.
func (o *TxResponse) GetConsensusHeight() int64 {
	if o == nil || o.ConsensusHeight == nil {
		var ret int64
		return ret
	}
	return *o.ConsensusHeight
}

// GetConsensusHeightOk returns a tuple with the ConsensusHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxResponse) GetConsensusHeightOk() (*int64, bool) {
	if o == nil || o.ConsensusHeight == nil {
		return nil, false
	}
	return o.ConsensusHeight, true
}

// HasConsensusHeight returns a boolean if a field has been set.
func (o *TxResponse) HasConsensusHeight() bool {
	if o != nil && o.ConsensusHeight != nil {
		return true
	}

	return false
}

// SetConsensusHeight gets a reference to the given int64 and assigns it to the ConsensusHeight field.
func (o *TxResponse) SetConsensusHeight(v int64) {
	o.ConsensusHeight = &v
}

// GetFinalisedHeight returns the FinalisedHeight field value if set, zero value otherwise.
func (o *TxResponse) GetFinalisedHeight() int64 {
	if o == nil || o.FinalisedHeight == nil {
		var ret int64
		return ret
	}
	return *o.FinalisedHeight
}

// GetFinalisedHeightOk returns a tuple with the FinalisedHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxResponse) GetFinalisedHeightOk() (*int64, bool) {
	if o == nil || o.FinalisedHeight == nil {
		return nil, false
	}
	return o.FinalisedHeight, true
}

// HasFinalisedHeight returns a boolean if a field has been set.
func (o *TxResponse) HasFinalisedHeight() bool {
	if o != nil && o.FinalisedHeight != nil {
		return true
	}

	return false
}

// SetFinalisedHeight gets a reference to the given int64 and assigns it to the FinalisedHeight field.
func (o *TxResponse) SetFinalisedHeight(v int64) {
	o.FinalisedHeight = &v
}

// GetOutboundHeight returns the OutboundHeight field value if set, zero value otherwise.
func (o *TxResponse) GetOutboundHeight() int64 {
	if o == nil || o.OutboundHeight == nil {
		var ret int64
		return ret
	}
	return *o.OutboundHeight
}

// GetOutboundHeightOk returns a tuple with the OutboundHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxResponse) GetOutboundHeightOk() (*int64, bool) {
	if o == nil || o.OutboundHeight == nil {
		return nil, false
	}
	return o.OutboundHeight, true
}

// HasOutboundHeight returns a boolean if a field has been set.
func (o *TxResponse) HasOutboundHeight() bool {
	if o != nil && o.OutboundHeight != nil {
		return true
	}

	return false
}

// SetOutboundHeight gets a reference to the given int64 and assigns it to the OutboundHeight field.
func (o *TxResponse) SetOutboundHeight(v int64) {
	o.OutboundHeight = &v
}

// GetKeysignMetric returns the KeysignMetric field value if set, zero value otherwise.
func (o *TxResponse) GetKeysignMetric() TssKeysignMetric {
	if o == nil || o.KeysignMetric == nil {
		var ret TssKeysignMetric
		return ret
	}
	return *o.KeysignMetric
}

// GetKeysignMetricOk returns a tuple with the KeysignMetric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TxResponse) GetKeysignMetricOk() (*TssKeysignMetric, bool) {
	if o == nil || o.KeysignMetric == nil {
		return nil, false
	}
	return o.KeysignMetric, true
}

// HasKeysignMetric returns a boolean if a field has been set.
func (o *TxResponse) HasKeysignMetric() bool {
	if o != nil && o.KeysignMetric != nil {
		return true
	}

	return false
}

// SetKeysignMetric gets a reference to the given TssKeysignMetric and assigns it to the KeysignMetric field.
func (o *TxResponse) SetKeysignMetric(v TssKeysignMetric) {
	o.KeysignMetric = &v
}

func (o TxResponse) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObservedTx != nil {
		toSerialize["observed_tx"] = o.ObservedTx
	}
	if o.ConsensusHeight != nil {
		toSerialize["consensus_height"] = o.ConsensusHeight
	}
	if o.FinalisedHeight != nil {
		toSerialize["finalised_height"] = o.FinalisedHeight
	}
	if o.OutboundHeight != nil {
		toSerialize["outbound_height"] = o.OutboundHeight
	}
	if o.KeysignMetric != nil {
		toSerialize["keysign_metric"] = o.KeysignMetric
	}
	return json.Marshal(toSerialize)
}

type NullableTxResponse struct {
	value *TxResponse
	isSet bool
}

func (v NullableTxResponse) Get() *TxResponse {
	return v.value
}

func (v *NullableTxResponse) Set(val *TxResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTxResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTxResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTxResponse(val *TxResponse) *NullableTxResponse {
	return &NullableTxResponse{value: val, isSet: true}
}

func (v NullableTxResponse) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTxResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


