/*
Thornode API

Thornode REST API.

Contact: devs@thorchain.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Node struct for Node
type Node struct {
	NodeAddress string `json:"node_address"`
	Status string `json:"status"`
	PubKeySet NodePubKeySet `json:"pub_key_set"`
	// the consensus pub key for the node
	ValidatorConsPubKey string `json:"validator_cons_pub_key"`
	// the P2PID (:6040/p2pid endpoint) of the node
	PeerId string `json:"peer_id"`
	// the block height at which the node became active
	ActiveBlockHeight int64 `json:"active_block_height"`
	// the block height of the current provided information for the node
	StatusSince int64 `json:"status_since"`
	NodeOperatorAddress string `json:"node_operator_address"`
	// current node bond
	TotalBond string `json:"total_bond"`
	BondProviders NodeBondProviders `json:"bond_providers"`
	// the set of vault public keys of which the node is a member
	SignerMembership []string `json:"signer_membership"`
	RequestedToLeave bool `json:"requested_to_leave"`
	// indicates whether the node has been forced to leave by the network, typically via ban
	ForcedToLeave bool `json:"forced_to_leave"`
	LeaveHeight int64 `json:"leave_height"`
	IpAddress string `json:"ip_address"`
	// the currently set version of the node
	Version string `json:"version"`
	// the accumulated slash points, reset at churn but excessive slash points may carry over
	SlashPoints int64 `json:"slash_points"`
	Jail NodeJail `json:"jail"`
	CurrentAward string `json:"current_award"`
	// the last observed heights for all chain by the node
	ObserveChains []ChainHeight `json:"observe_chains"`
	PreflightStatus NodePreflightStatus `json:"preflight_status"`
}

// NewNode instantiates a new Node object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNode(nodeAddress string, status string, pubKeySet NodePubKeySet, validatorConsPubKey string, peerId string, activeBlockHeight int64, statusSince int64, nodeOperatorAddress string, totalBond string, bondProviders NodeBondProviders, signerMembership []string, requestedToLeave bool, forcedToLeave bool, leaveHeight int64, ipAddress string, version string, slashPoints int64, jail NodeJail, currentAward string, observeChains []ChainHeight, preflightStatus NodePreflightStatus) *Node {
	this := Node{}
	this.NodeAddress = nodeAddress
	this.Status = status
	this.PubKeySet = pubKeySet
	this.ValidatorConsPubKey = validatorConsPubKey
	this.PeerId = peerId
	this.ActiveBlockHeight = activeBlockHeight
	this.StatusSince = statusSince
	this.NodeOperatorAddress = nodeOperatorAddress
	this.TotalBond = totalBond
	this.BondProviders = bondProviders
	this.SignerMembership = signerMembership
	this.RequestedToLeave = requestedToLeave
	this.ForcedToLeave = forcedToLeave
	this.LeaveHeight = leaveHeight
	this.IpAddress = ipAddress
	this.Version = version
	this.SlashPoints = slashPoints
	this.Jail = jail
	this.CurrentAward = currentAward
	this.ObserveChains = observeChains
	this.PreflightStatus = preflightStatus
	return &this
}

// NewNodeWithDefaults instantiates a new Node object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeWithDefaults() *Node {
	this := Node{}
	return &this
}

// GetNodeAddress returns the NodeAddress field value
func (o *Node) GetNodeAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeAddress
}

// GetNodeAddressOk returns a tuple with the NodeAddress field value
// and a boolean to check if the value has been set.
func (o *Node) GetNodeAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeAddress, true
}

// SetNodeAddress sets field value
func (o *Node) SetNodeAddress(v string) {
	o.NodeAddress = v
}

// GetStatus returns the Status field value
func (o *Node) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Node) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Node) SetStatus(v string) {
	o.Status = v
}

// GetPubKeySet returns the PubKeySet field value
func (o *Node) GetPubKeySet() NodePubKeySet {
	if o == nil {
		var ret NodePubKeySet
		return ret
	}

	return o.PubKeySet
}

// GetPubKeySetOk returns a tuple with the PubKeySet field value
// and a boolean to check if the value has been set.
func (o *Node) GetPubKeySetOk() (*NodePubKeySet, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PubKeySet, true
}

// SetPubKeySet sets field value
func (o *Node) SetPubKeySet(v NodePubKeySet) {
	o.PubKeySet = v
}

// GetValidatorConsPubKey returns the ValidatorConsPubKey field value
func (o *Node) GetValidatorConsPubKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidatorConsPubKey
}

// GetValidatorConsPubKeyOk returns a tuple with the ValidatorConsPubKey field value
// and a boolean to check if the value has been set.
func (o *Node) GetValidatorConsPubKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidatorConsPubKey, true
}

// SetValidatorConsPubKey sets field value
func (o *Node) SetValidatorConsPubKey(v string) {
	o.ValidatorConsPubKey = v
}

// GetPeerId returns the PeerId field value
func (o *Node) GetPeerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PeerId
}

// GetPeerIdOk returns a tuple with the PeerId field value
// and a boolean to check if the value has been set.
func (o *Node) GetPeerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PeerId, true
}

// SetPeerId sets field value
func (o *Node) SetPeerId(v string) {
	o.PeerId = v
}

// GetActiveBlockHeight returns the ActiveBlockHeight field value
func (o *Node) GetActiveBlockHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ActiveBlockHeight
}

// GetActiveBlockHeightOk returns a tuple with the ActiveBlockHeight field value
// and a boolean to check if the value has been set.
func (o *Node) GetActiveBlockHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActiveBlockHeight, true
}

// SetActiveBlockHeight sets field value
func (o *Node) SetActiveBlockHeight(v int64) {
	o.ActiveBlockHeight = v
}

// GetStatusSince returns the StatusSince field value
func (o *Node) GetStatusSince() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StatusSince
}

// GetStatusSinceOk returns a tuple with the StatusSince field value
// and a boolean to check if the value has been set.
func (o *Node) GetStatusSinceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusSince, true
}

// SetStatusSince sets field value
func (o *Node) SetStatusSince(v int64) {
	o.StatusSince = v
}

// GetNodeOperatorAddress returns the NodeOperatorAddress field value
func (o *Node) GetNodeOperatorAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeOperatorAddress
}

// GetNodeOperatorAddressOk returns a tuple with the NodeOperatorAddress field value
// and a boolean to check if the value has been set.
func (o *Node) GetNodeOperatorAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeOperatorAddress, true
}

// SetNodeOperatorAddress sets field value
func (o *Node) SetNodeOperatorAddress(v string) {
	o.NodeOperatorAddress = v
}

// GetTotalBond returns the TotalBond field value
func (o *Node) GetTotalBond() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TotalBond
}

// GetTotalBondOk returns a tuple with the TotalBond field value
// and a boolean to check if the value has been set.
func (o *Node) GetTotalBondOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalBond, true
}

// SetTotalBond sets field value
func (o *Node) SetTotalBond(v string) {
	o.TotalBond = v
}

// GetBondProviders returns the BondProviders field value
func (o *Node) GetBondProviders() NodeBondProviders {
	if o == nil {
		var ret NodeBondProviders
		return ret
	}

	return o.BondProviders
}

// GetBondProvidersOk returns a tuple with the BondProviders field value
// and a boolean to check if the value has been set.
func (o *Node) GetBondProvidersOk() (*NodeBondProviders, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BondProviders, true
}

// SetBondProviders sets field value
func (o *Node) SetBondProviders(v NodeBondProviders) {
	o.BondProviders = v
}

// GetSignerMembership returns the SignerMembership field value
func (o *Node) GetSignerMembership() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SignerMembership
}

// GetSignerMembershipOk returns a tuple with the SignerMembership field value
// and a boolean to check if the value has been set.
func (o *Node) GetSignerMembershipOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SignerMembership, true
}

// SetSignerMembership sets field value
func (o *Node) SetSignerMembership(v []string) {
	o.SignerMembership = v
}

// GetRequestedToLeave returns the RequestedToLeave field value
func (o *Node) GetRequestedToLeave() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RequestedToLeave
}

// GetRequestedToLeaveOk returns a tuple with the RequestedToLeave field value
// and a boolean to check if the value has been set.
func (o *Node) GetRequestedToLeaveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestedToLeave, true
}

// SetRequestedToLeave sets field value
func (o *Node) SetRequestedToLeave(v bool) {
	o.RequestedToLeave = v
}

// GetForcedToLeave returns the ForcedToLeave field value
func (o *Node) GetForcedToLeave() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ForcedToLeave
}

// GetForcedToLeaveOk returns a tuple with the ForcedToLeave field value
// and a boolean to check if the value has been set.
func (o *Node) GetForcedToLeaveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForcedToLeave, true
}

// SetForcedToLeave sets field value
func (o *Node) SetForcedToLeave(v bool) {
	o.ForcedToLeave = v
}

// GetLeaveHeight returns the LeaveHeight field value
func (o *Node) GetLeaveHeight() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LeaveHeight
}

// GetLeaveHeightOk returns a tuple with the LeaveHeight field value
// and a boolean to check if the value has been set.
func (o *Node) GetLeaveHeightOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LeaveHeight, true
}

// SetLeaveHeight sets field value
func (o *Node) SetLeaveHeight(v int64) {
	o.LeaveHeight = v
}

// GetIpAddress returns the IpAddress field value
func (o *Node) GetIpAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value
// and a boolean to check if the value has been set.
func (o *Node) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAddress, true
}

// SetIpAddress sets field value
func (o *Node) SetIpAddress(v string) {
	o.IpAddress = v
}

// GetVersion returns the Version field value
func (o *Node) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *Node) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *Node) SetVersion(v string) {
	o.Version = v
}

// GetSlashPoints returns the SlashPoints field value
func (o *Node) GetSlashPoints() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SlashPoints
}

// GetSlashPointsOk returns a tuple with the SlashPoints field value
// and a boolean to check if the value has been set.
func (o *Node) GetSlashPointsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SlashPoints, true
}

// SetSlashPoints sets field value
func (o *Node) SetSlashPoints(v int64) {
	o.SlashPoints = v
}

// GetJail returns the Jail field value
func (o *Node) GetJail() NodeJail {
	if o == nil {
		var ret NodeJail
		return ret
	}

	return o.Jail
}

// GetJailOk returns a tuple with the Jail field value
// and a boolean to check if the value has been set.
func (o *Node) GetJailOk() (*NodeJail, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jail, true
}

// SetJail sets field value
func (o *Node) SetJail(v NodeJail) {
	o.Jail = v
}

// GetCurrentAward returns the CurrentAward field value
func (o *Node) GetCurrentAward() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrentAward
}

// GetCurrentAwardOk returns a tuple with the CurrentAward field value
// and a boolean to check if the value has been set.
func (o *Node) GetCurrentAwardOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentAward, true
}

// SetCurrentAward sets field value
func (o *Node) SetCurrentAward(v string) {
	o.CurrentAward = v
}

// GetObserveChains returns the ObserveChains field value
func (o *Node) GetObserveChains() []ChainHeight {
	if o == nil {
		var ret []ChainHeight
		return ret
	}

	return o.ObserveChains
}

// GetObserveChainsOk returns a tuple with the ObserveChains field value
// and a boolean to check if the value has been set.
func (o *Node) GetObserveChainsOk() ([]ChainHeight, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObserveChains, true
}

// SetObserveChains sets field value
func (o *Node) SetObserveChains(v []ChainHeight) {
	o.ObserveChains = v
}

// GetPreflightStatus returns the PreflightStatus field value
func (o *Node) GetPreflightStatus() NodePreflightStatus {
	if o == nil {
		var ret NodePreflightStatus
		return ret
	}

	return o.PreflightStatus
}

// GetPreflightStatusOk returns a tuple with the PreflightStatus field value
// and a boolean to check if the value has been set.
func (o *Node) GetPreflightStatusOk() (*NodePreflightStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreflightStatus, true
}

// SetPreflightStatus sets field value
func (o *Node) SetPreflightStatus(v NodePreflightStatus) {
	o.PreflightStatus = v
}

func (o Node) MarshalJSON_deprecated() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["node_address"] = o.NodeAddress
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["pub_key_set"] = o.PubKeySet
	}
	if true {
		toSerialize["validator_cons_pub_key"] = o.ValidatorConsPubKey
	}
	if true {
		toSerialize["peer_id"] = o.PeerId
	}
	if true {
		toSerialize["active_block_height"] = o.ActiveBlockHeight
	}
	if true {
		toSerialize["status_since"] = o.StatusSince
	}
	if true {
		toSerialize["node_operator_address"] = o.NodeOperatorAddress
	}
	if true {
		toSerialize["total_bond"] = o.TotalBond
	}
	if true {
		toSerialize["bond_providers"] = o.BondProviders
	}
	if true {
		toSerialize["signer_membership"] = o.SignerMembership
	}
	if true {
		toSerialize["requested_to_leave"] = o.RequestedToLeave
	}
	if true {
		toSerialize["forced_to_leave"] = o.ForcedToLeave
	}
	if true {
		toSerialize["leave_height"] = o.LeaveHeight
	}
	if true {
		toSerialize["ip_address"] = o.IpAddress
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["slash_points"] = o.SlashPoints
	}
	if true {
		toSerialize["jail"] = o.Jail
	}
	if true {
		toSerialize["current_award"] = o.CurrentAward
	}
	if true {
		toSerialize["observe_chains"] = o.ObserveChains
	}
	if true {
		toSerialize["preflight_status"] = o.PreflightStatus
	}
	return json.Marshal(toSerialize)
}

type NullableNode struct {
	value *Node
	isSet bool
}

func (v NullableNode) Get() *Node {
	return v.value
}

func (v *NullableNode) Set(val *Node) {
	v.value = val
	v.isSet = true
}

func (v NullableNode) IsSet() bool {
	return v.isSet
}

func (v *NullableNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNode(val *Node) *NullableNode {
	return &NullableNode{value: val, isSet: true}
}

func (v NullableNode) MarshalJSON_deprecated() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


